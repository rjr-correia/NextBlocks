{"version":3,"file":"codeenv.min.js","sources":["../src/codeenv.js"],"sourcesContent":["/**\n *\n * @module      mod_nextblocks/codeenv\n * @copyright   2025 Duarte Pereira<dg.pereira@campus.fct.unl.pt>\n * @copyright   2025 Rui Correia<rjr.correia@campus.fct.unl.pt>\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/* globals Blockly */\n\n/* globals javascript */\n\n/* globals python */\n\n\nlet toolbox = {\n    'kind': 'categoryToolbox',\n    'readOnly': true,\n    'contents': [\n        {\n            'kind': 'toolboxlabel',\n            'name': 'NextBlocks',\n            'colour': 'darkslategrey'\n        },\n        {\n            'kind': 'category',\n            'name': 'Logic',\n            'colour': '5b80a5',\n            \"cssConfig\": {\n                'icon': 'customIcon fa fa-cog',\n            },\n            'contents': [\n                {\n                    'kind': 'block',\n                    'type': 'controls_if',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'logic_compare',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'logic_negate',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'logic_operation',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'logic_boolean',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'logic_null',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'logic_ternary',\n                }\n            ],\n        },\n        {\n            'kind': 'category',\n            'name': 'Loops',\n            'colour': '5ba580',\n            \"cssConfig\": {\n                'icon': 'customIcon fa-solid fa-sync',\n            },\n            'contents': [\n                {\n                    'kind': 'block',\n                    'type': 'controls_repeat_ext',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'controls_whileUntil',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'controls_for',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'controls_forEach',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'controls_flow_statements',\n                }\n            ],\n        },\n        {\n            'kind': 'category',\n            'name': 'Math',\n            'colour': '5b67a5',\n            \"cssConfig\": {\n                'icon': 'customIcon fa-solid fa-plus-minus',\n            },\n            'contents': [\n                {\n                    'kind': 'block',\n                    'type': 'math_number',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_arithmetic',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_single',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_trig',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_constant',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_number_property',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_round',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_on_list',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_modulo',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_constrain',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_random_int',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_random_float',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_atan2',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_to_number',\n                },\n\n            ],\n        },\n        {\n            'kind': 'category',\n            'name': 'Text',\n            'colour': '5ba58c',\n            \"cssConfig\": {\n                'icon': 'customIcon fa-solid fa-font',\n            },\n            'contents': [\n                {\n                    'kind': 'block',\n                    'type': 'text',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_multiline',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_join',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_append',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_length',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_isEmpty',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_indexOf',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_charAt',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_getSubstring',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_changeCase',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_trim',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_count',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_replace',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_reverse',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_print',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_ask',\n                },\n            ],\n        },\n        {\n            'kind': 'category',\n            'name': 'Lists',\n            'colour': '5b80a5',\n            \"cssConfig\": {\n                'icon': 'customIcon fa-solid fa-list',\n            },\n            'contents': [\n                {\n                    'kind': 'block',\n                    'type': 'lists_create_with',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'lists_repeat',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'lists_length',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'lists_isEmpty',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'lists_indexOf',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'lists_getIndex',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'lists_setIndex',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'lists_getSublist',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'lists_split',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'lists_sort',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'lists_reverse',\n                }\n            ],\n        },\n        {\n            'kind': 'category',\n            'name': 'Variables',\n            'colour': 'a55b80',\n            \"cssConfig\": {\n                'icon': 'customIcon fa-solid fa-clipboard-list',\n            },\n            'custom': 'VARIABLE',\n        },\n        {\n            'kind': 'category',\n            'name': 'Functions',\n            'colour': '995ba5',\n            \"cssConfig\": {\n                'icon': 'customIcon fa-solid fa-code',\n            },\n            'custom': 'PROCEDURE',\n        },\n    ],\n};\n\n// GetMainWorkspace might remove need for global variable\nlet nextblocksWorkspace;\n\ndefine(['mod_nextblocks/lib', 'mod_nextblocks/repository', 'mod_nextblocks/chat'], function(lib, repository, chat) {\n    /**\n     * @param {CodeString} code The Javascript code to be run\n     * Runs the code and displays the output in the output div\n     */\n    async function runCode(code) {\n        const outputDiv = document.getElementById('output-div');\n        outputDiv.classList.remove('tests-active');\n        var codeString = code.getCompleteCodeString();\n\n        codeString = lib.errorPrevention(codeString);\n\n        const output = await lib.silentRunCode(codeString);\n\n        // Replace newlines with <br /> so that they are displayed correctly\n        const outputHTML = String(output).replace(/\\n/g, \"<br />\");\n        // Wrap the output in a div with max-height and overflow-y: auto to make it scrollable if too long (multiline input)\n        if(output.includes(\"Error\")){\n            // eslint-disable-next-line max-len\n            outputDiv.innerHTML = `<div style=\"max-height: 100%; overflow-y: auto; color: red !important; background-color: black;\"><pre>${outputHTML}</pre></div>`;\n        }\n        else {\n            // eslint-disable-next-line max-len\n            outputDiv.innerHTML = `<div style=\"max-height: 100%; overflow-y: auto; color: white !important; background-color: black;\"><pre>${outputHTML}</pre></div>`;\n        }\n    }\n\n    /**\n     * Saves the current state of the workspace to the database, for later retrieval and display\n     * By default, the workspace is saved to the currently logged-in user's entry in the database\n     * If a teacher is adding a comment to a student's submission, the student's id is passed as an argument,\n     * because in that case the workspace should be saved to the student's entry in the database, not to the teacher's.\n     * @param {bool} isTeacherReport whether the current page is a teacher report. If so, we need to pass the student's id,\n     * because PHP will not be able to get it from the user api, as the logged-in user will be the teacher\n     */\n    const saveState = (isTeacherReport) => {\n        const state = Blockly.serialization.workspaces.save(nextblocksWorkspace);\n        const stateB64 = btoa(JSON.stringify(state));\n        const cmid = getCMID();\n\n        if (isTeacherReport) {\n            const queryString = window.location.search;\n            const urlParams = new URLSearchParams(queryString);\n            const userId = urlParams.get('userid');\n\n            repository.saveWorkspace(cmid, stateB64, userId);\n        } else {\n            repository.saveWorkspace(cmid, stateB64);\n        }\n    };\n\n    const submitWorkspace = async(inputFuncDecs) => {\n        const codeString = lib.getWorkspaceCode(nextblocksWorkspace, inputFuncDecs).getSubmittableCodeString();\n        const state = Blockly.serialization.workspaces.save(nextblocksWorkspace);\n        const stateB64 = btoa(JSON.stringify(state));\n        const cmid = getCMID();\n        repository.submitWorkspace(cmid, stateB64, codeString);\n\n        const delay = ms => new Promise(res => setTimeout(res, ms));\n        await delay(1000);\n\n        location.reload();\n    };\n\n    /**\n     * @param {any[]} results The results of the tests\n     * @param {{}} tests The tests that were run\n     * Displays the results of the tests in the output div\n     */\n    function displayTestResults(results, tests) {\n        const testResultsDiv = document.getElementById('output-div');\n        testResultsDiv.classList.add('tests-active');\n        testResultsDiv.innerHTML = lib.testsAccordion(results, tests);\n    }\n\n    /**\n     * @param {{}} tests The tests to be run\n     * @param {WorkspaceSvg} workspace The workspace to get the code from\n     * @param {string} inputFuncDecs\n     * @param {number} lastUserReaction The type of reaction the current user last submitted\n     * @param {boolean} isTeacherReport Whether the report to be displayed is a teacher report\n     */\n    function setupButtons(tests, workspace, inputFuncDecs, lastUserReaction, isTeacherReport) {\n        // Listen for clicks on the run button\n        const runButton = document.getElementById('runButton');\n        runButton.addEventListener('click', function() {\n            const code = lib.getWorkspaceCode(workspace, inputFuncDecs);\n            // Lib.replaceCode(code);\n            runCode(code);\n        });\n\n        if (tests !== null) {\n            // Listen for clicks on the run tests button\n            const runTestsButton = document.getElementById('runTestsButton');\n            runTestsButton.addEventListener('click', async () => { // Needs anonymous function wrap to pass argument\n                const code = lib.getWorkspaceCode(workspace, inputFuncDecs).getCompleteCodeString();\n                lib.runTests(code, tests).then((results) => {\n                    displayTestResults(results, tests);\n                });\n            });\n        }\n\n        // Listen for clicks on the save button\n        const saveButton = document.getElementById('saveButton');\n        saveButton.addEventListener('click', () => {\n            saveState(isTeacherReport);\n        });\n\n        // Listen for clicks on the submit button, if it exists (doesn't exist in report pages)\n        const submitButton = document.getElementById('submitButton');\n        if (submitButton !== null) {\n            submitButton.addEventListener('click', () => {\n                submitWorkspace(inputFuncDecs);\n            });\n        }\n\n        // Convert the lastUserReaction to a string\n        let lastUserReactionString = \"\";\n        if (lastUserReaction === 1) {\n            lastUserReactionString = \"easy\";\n        } else if (lastUserReaction === 2) {\n            lastUserReactionString = \"medium\";\n        } else if (lastUserReaction === 3) {\n            lastUserReactionString = \"hard\";\n        }\n\n        const imgs = document.getElementsByClassName(\"emoji-img\");\n        Array.from(imgs).forEach((img) => {\n            let imageType = '';\n            if (img.src.includes(\"easy\")) {\n                imageType = \"easy\";\n            } else if (img.src.includes(\"think\")) {\n                imageType = \"medium\";\n            } else if (img.src.includes(\"hard\")) {\n                imageType = \"hard\";\n            }\n\n            // Start with one image selected if the user has already reacted in a previous session\n            if (lastUserReactionString === imageType) {\n                changeImageBackground(img);\n            }\n\n            // Only listen for clicks on the images if page is not a teacher report\n            if (!isTeacherReport) {\n                img.addEventListener(\"click\", () => {\n                    // Submit reaction, and wait for response with new reaction counts\n                    const newReactionsPromise = repository.submitReaction(getCMID(), imageType);\n                    newReactionsPromise.then((newReactions) => {\n                        updatePercentages(newReactions.reactionseasy, newReactions.reactionsmedium, newReactions.reactionshard);\n                        changeImageBackground(img);\n                    });\n                });\n            }\n        });\n\n        const textCodeButton = document.getElementById('showCodeButton');\n        let codeVisible = false; // Variable to track the visibility state\n        let overlayDiv;\n\n        textCodeButton.addEventListener('click', () => {\n            const blocklyArea = document.getElementById('blocklyArea');\n            const paddingLeft = parseInt(window.getComputedStyle(blocklyArea).getPropertyValue('padding-left'));\n            const paddingRight = parseInt(window.getComputedStyle(blocklyArea).getPropertyValue('padding-right'));\n\n            if (codeVisible) {\n                overlayDiv.style.display = 'none';\n                codeVisible = false;\n            } else {\n                if (!overlayDiv) {\n                    overlayDiv = document.createElement('div');\n                    overlayDiv.style.position = 'absolute';\n                    overlayDiv.style.top = '0';\n                    overlayDiv.style.left = `${paddingLeft}px`;\n                    overlayDiv.style.width = `calc(100% - ${paddingLeft + paddingRight}px)`;\n                    overlayDiv.style.height = '100%';\n                    overlayDiv.style.backgroundColor = 'white';\n                    overlayDiv.style.border = '1px solid #ddd';\n                    overlayDiv.style.padding = '10px';\n                    overlayDiv.style.fontFamily = '\"Lucida Console\", \"Courier New\", monospace';\n                    overlayDiv.style.zIndex = '1000';\n                    blocklyArea.appendChild(overlayDiv);\n\n                    const headerDiv = document.createElement('div');\n                    headerDiv.id = 'langContainer';\n                    headerDiv.style.position = 'absolute';\n                    headerDiv.style.top = '5px';\n                    headerDiv.style.left = '5px';\n                    headerDiv.style.zIndex = '1100';\n                    overlayDiv.appendChild(headerDiv);\n\n                    const jsButton = document.createElement('button');\n                    jsButton.id = 'jsButton';\n                    jsButton.textContent = 'JavaScript';\n                    jsButton.style.marginRight = '5px';\n                    headerDiv.appendChild(jsButton);\n\n                    const pyButton = document.createElement('button');\n                    pyButton.id = 'pyButton';\n                    pyButton.textContent = 'Python';\n                    headerDiv.appendChild(pyButton);\n\n                    const codeContentDiv = document.createElement('div');\n                    codeContentDiv.id = 'codeContent';\n                    codeContentDiv.style.marginTop = '40px';\n                    overlayDiv.appendChild(codeContentDiv);\n\n\n                    jsButton.addEventListener('click', () => {\n                        updateOverlayCode('javascript');\n                        jsButton.classList.add('selected-button');\n                        pyButton.classList.remove('selected-button');\n                    });\n\n                    pyButton.addEventListener('click', () => {\n                        updateOverlayCode('python');\n                        pyButton.classList.add('selected-button');\n                        jsButton.classList.remove('selected-button');\n                    });\n\n                    jsButton.classList.add('selected-button');\n                }\n\n                updateOverlayCode('javascript');\n                document.querySelectorAll('.blocklyHtmlInput').forEach(input => {\n                    input.style.display = 'none';\n                });\n                overlayDiv.style.display = 'block';\n                codeVisible = true;\n            }\n        });\n        /**\n         * A helper function to update the code in the overlay according to the chosen language.\n         * @param {string} lang The chosen language.\n         */\n        function updateOverlayCode(lang) {\n            let codeString = '';\n            if (lang == 'python') {\n                codeString = lib.formatPythonCodeHTML(lib.getWorkspaceCodePython(workspace, inputFuncDecs));\n            } else {\n                codeString = lib.formatCodeHTML(lib.getWorkspaceCode(workspace, inputFuncDecs));\n            }\n            codeString = codeString.replace(/\\n/g, \"<br />\");\n            const codeContentDiv = document.getElementById('codeContent');\n            if (codeContentDiv) {\n                codeContentDiv.innerHTML = codeString;\n            }\n        }\n    }\n\n    return {\n        /**\n         * @param {string} contents The contents of the tests file.\n         * @param {string} loadedSave The contents of the loaded save, in a base64-encoded JSON string.\n         * @param {{}} customBlocks The custom blocks to be added to the toolbox, created by the exercise creator.\n         * @param {number} remainingSubmissions The number of remaining submissions for the current user.\n         * @param {string[]} reactions An array of 3 strings, each containing the number of reactions of a certain type\n         * (easy, medium, hard).\n         * @param {number} lastUserReaction The type of reaction the current user last submitted\n         * (0 = no reaction, 1 = easy, 2 = medium, 3 = hard).\n         * @param {number} reportType Indicates the type of report to be displayed (0 = no report, 1 = teacher report,\n         * 2 = student report).\n         * @param {string} userName The name of the user that loaded the page.\n         * @param {number} activityId The id of the activity\n         */\n        init: function(contents, loadedSave, customBlocks, remainingSubmissions, reactions, lastUserReaction, reportType = 0,\n                       userName, activityId) {\n            // If report is student but he can still submit, change to no report so he can use the workspace\n            if (reportType === 2 && remainingSubmissions > 0) {\n                reportType = 0;\n            }\n            updatePercentages(reactions[0], reactions[1], reactions[2]);\n\n            chat.populate(repository.getMessages, activityId);\n\n            const blocklyDiv = document.getElementById('blocklyDiv');\n            const blocklyArea = document.getElementById('blocklyArea');\n\n            // If there are custom blocks, add a new category to the toolbox\n            if (customBlocks.length > 0) {\n                toolbox.contents.push({\n                    'kind': 'category',\n                    'name': 'Custom Blocks',\n                    'colour': 'a55b80',\n                    \"cssConfig\": {\n                        'icon': 'customIcon fa-solid fa-code',\n                    },\n                    'contents': [],\n                });\n            }\n\n            customBlocks.forEach((block) => {\n                let splitTest = block.generator.split(\"forBlock['\");\n                let dotCase = false;\n                if (splitTest.length < 2) {\n                    splitTest = block.generator.split(\"forBlock.\");\n                    if (splitTest.length < 2) {\n                        throw new Error(\"Invalid generator\");\n                    }\n                    dotCase = true;\n                }\n                const blockName = splitTest[1].split(dotCase ? \" = \" : \"']\")[0].trim();\n                // Add block to toolbox\n                toolbox.contents[toolbox.contents.length - 1].contents.push({\n                    'kind': 'block',\n                    'type': blockName,\n                });\n\n                const definition = JSON.parse(block.definition);\n                Blockly.defineBlocksWithJsonArray([definition]);\n                // eslint-disable-next-line no-eval\n                eval(block.generator);\n                if(block.pythongenerator.length === 0){\n                    var code = \"python.pythonGenerator.forBlock['\"+blockName+\"'] = function(block) {\\n\" +\n                        \"  const code = '\"+blockName+\"()';\\n\" +\n                        \"  return [code, python.pythonGenerator.ORDER_ATOMIC];\\n\" +\n                        \"};\\n\";\n                    // eslint-disable-next-line no-eval\n                    eval(code);\n                } else {\n                    // eslint-disable-next-line no-eval\n                    eval(block.pythongenerator);\n                }\n            });\n\n            nextblocksWorkspace = Blockly.inject(blocklyDiv, getOptions(remainingSubmissions, reportType !== 0));\n            javascript.javascriptGenerator.init(nextblocksWorkspace);\n            python.pythonGenerator.init(nextblocksWorkspace);\n            // Use resize observer instead of window resize event. This captures both window resize and element resize\n            const resizeObserver = new ResizeObserver(() => onResize(blocklyArea, blocklyDiv, nextblocksWorkspace));\n            resizeObserver.observe(blocklyArea);\n\n            // Parse json from test file contents\n            const tests = JSON.parse(contents);\n            let inputFunctionDeclarations = {funcDecs: \"\"};\n\n            // Load the save, if there is one\n            if (loadedSave !== null) {\n                loadSave(loadedSave, nextblocksWorkspace);\n            } else { // Otherwise, add the start block\n                addBlockToWorkspace('start', nextblocksWorkspace);\n            }\n\n            // If page is a report page, lock all workspace blocks while still allowing comments\n            if (reportType !== 0) {\n                lockWorkspaceBlocks(nextblocksWorkspace);\n            }\n\n            setupButtons(tests, nextblocksWorkspace, inputFunctionDeclarations.funcDecs, lastUserReaction, reportType === 1);\n\n            chat.run(userName, activityId, repository.saveMessage);\n        },\n    };\n});\n\n/**\n * Locks all blocks in a workspace, preventing them from being moved or deleted\n * @param {WorkspaceSvg} workspace The workspace to lock\n */\nconst lockWorkspaceBlocks = function(workspace) {\n    workspace.getTopBlocks(false).forEach((block) => {\n        lockBlock(block);\n        lockChildren(block);\n    });\n\n    /**\n     * Recursively locks a block and all its children, preventing them from being moved or deleted\n     * @param {BlockSvg} block The block that will be locked and have its children locked\n     */\n    function lockChildren(block) {\n        block.getChildren(false).forEach((child) => {\n            lockBlock(child);\n\n            // Have to mess with internal Blockly stuff to block only the inputs while still allowing comments\n            child.inputList.forEach((input) => {\n                input.fieldRow.forEach((field) => {\n                    field.setEnabled(false);\n                });\n            });\n\n            lockChildren(child);\n        });\n    }\n\n    /**\n     * Locks a block, preventing it from being moved or deleted\n     * @param {BlockSvg} block The block that will be locked\n     */\n    function lockBlock(block) {\n        block.setMovable(false);\n        block.setDeletable(false);\n    }\n};\n\n// Makes background of image blue if it is not blue, and vice versa\nconst changeImageBackground = function(img) {\n    // Change background of all other images to secondary\n    const imgs = document.getElementsByClassName(\"emoji-img\");\n    Array.from(imgs).forEach((otherImg) => {\n        if (otherImg !== img) {\n            otherImg.classList.remove(\"bg-primary\");\n            otherImg.classList.add(\"bg-secondary\");\n        }\n    });\n\n    // Toggle background of clicked image\n    if (img.classList.contains(\"bg-primary\")) {\n        img.classList.remove(\"bg-primary\");\n        img.classList.add(\"bg-secondary\");\n    } else {\n        img.classList.remove(\"bg-secondary\");\n        img.classList.add(\"bg-primary\");\n    }\n};\n\n/**\n * Updates the percentages of difficulty levels (easy, medium, hard) on the page.\n *\n * @param {number} easy - The count of 'easy' reactions.\n * @param {number} medium - The count of 'medium' reactions.\n * @param {number} hard - The count of 'hard' reactions.\n * @param {string} [inc=\"\"] - The difficulty level to increment. If not provided, no level is incremented.\n * Unused right now, just for future-proofing\n */\nconst updatePercentages = function(easy, medium, hard, inc = \"\") {\n    // Mapping of difficulty levels to their corresponding HTML elements\n    const elements = {\n        \"easy\": document.getElementById('percentage-easy'),\n        \"medium\": document.getElementById('percentage-medium'),\n        \"hard\": document.getElementById('percentage-hard')\n    };\n\n    // Mapping of difficulty levels to their counts\n    const values = {\n        \"easy\": easy,\n        \"medium\": medium,\n        \"hard\": hard\n    };\n\n    // If a difficulty level to increment is provided, increment its count\n    if (inc in values) {\n        values[inc]++;\n    }\n\n    // Calculate the percentages for each difficulty level\n    let percentages = calcPercentages(values.easy, values.medium, values.hard);\n\n    // Update the HTML elements with the new percentages\n    elements.easy.innerHTML = percentages[0] + '%';\n    elements.medium.innerHTML = percentages[1] + '%';\n    elements.hard.innerHTML = percentages[2] + '%';\n};\n\nconst calcPercentages = (easy, medium, hard) => {\n    const total = easy + medium + hard;\n    return total === 0 ? [0, 0, 0] : [easy, medium, hard].map(val => Math.round((val / total) * 100));\n};\n\nconst getOptions = function(remainingSubmissions, readOnly) {\n    return {\n        toolbox: readOnly ? null : toolbox,\n        collapse: true,\n        comments: true,\n        disable: false,\n        maxBlocks: Infinity,\n        trashcan: !readOnly,\n        horizontalLayout: false,\n        toolboxPosition: 'start',\n        css: true,\n        media: 'https://blockly-demo.appspot.com/static/media/',\n        rtl: false,\n        scrollbars: true,\n        sounds: true,\n        oneBasedIndex: false,\n        readOnly: remainingSubmissions <= 0,\n        grid: {\n            spacing: 20,\n            length: 1,\n            colour: '#888',\n            snap: false,\n        },\n        zoom: {\n            controls: true,\n            wheel: true,\n            startScale: 1,\n            maxScale: 3,\n            minScale: 0.3,\n            scaleSpeed: 1.2,\n        },\n    };\n};\n\nconst onResize = function(blocklyArea, blocklyDiv, nextblocksWorkspace) {\n    // Compute the absolute coordinates and dimensions of blocklyArea.\n    let element = blocklyArea;\n    let x = 0;\n    let y = 0;\n    do {\n        x += element.offsetLeft;\n        y += element.offsetTop;\n        element = element.offsetParent;\n    } while (element);\n    // Position blocklyDiv over blocklyArea.\n    blocklyDiv.style.left = x + 'px';\n    blocklyDiv.style.top = y + 'px';\n    blocklyDiv.style.width = blocklyArea.offsetWidth + 'px';\n    blocklyDiv.style.height = blocklyArea.offsetHeight + 'px';\n    Blockly.svgResize(nextblocksWorkspace);\n};\n\n/**\n * @param {String} blockName The name of the input block to be added (prompt on the left side of the block\n * @param {WorkspaceSvg} workspace The workspace to add the input block to\n * @returns {BlockSvg} The newly created block\n */\nfunction addBlockToWorkspace(blockName, workspace) {\n    const newBlock = workspace.newBlock(blockName);\n    newBlock.initSvg();\n    newBlock.render();\n    return newBlock;\n}\n\n/**\n * @param {String} loadedSave\n * @param {WorkspaceSvg} workspace\n */\nfunction loadSave(loadedSave, workspace) {\n    const state = JSON.parse(atob(loadedSave));\n    Blockly.serialization.workspaces.load(state, workspace);\n}\n\n/**\n * @returns {Number} The course module id of the current page\n */\nfunction getCMID() {\n    const classList = document.body.classList;\n    const cmidClass = Array.from(classList).find((className) => className.startsWith('cmid-'));\n    return parseInt(cmidClass.split('-')[1]);\n}\n\n/**\n * @param {string} prompt The name of the input block to be added (prompt on the left side of the block)\n * @param {string} inputType The type of the input block to be added (string, number, etc.)\n * @param {object} inputFunctionDeclarations Contains the string containing the function declarations for the input\n * blocks, to be added to the top of the code. Is an object so that it is passed by reference.\n */\n\n// eslint-disable-next-line no-extend-native\nString.prototype.hideWrapperFunction = function() {\n    const lines = this.split('\\n');\n    lines.splice(0, 2); // Remove the first two lines\n    return lines.join('\\n');\n};\n\njavascript.javascriptGenerator.forBlock.text_print = function(block, generator) {\n    return (\n        \"customPrintln(\" +\n        (generator.valueToCode(\n            block,\n            \"TEXT\",\n            Blockly.JavaScript.ORDER_NONE\n        ) || \"''\") +\n        \");\\n\"\n    );\n};\n\njavascript.javascriptGenerator.forBlock.text_ask = function(block, generator) {\n    const question = (generator.valueToCode(\n        block,\n        'TEXT',\n        Blockly.JavaScript.ORDER_NONE\n    ) || \"''\");\n    let code = \"await input(\" + question + \")\";\n    return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\npython.pythonGenerator.forBlock.text_ask = function(block, generator) {\n    const question = (generator.valueToCode(\n        block,\n        'TEXT',\n        Blockly.Python.ORDER_NONE\n    ) || \"''\");\n    let code = \"input(\" + question + \")\";\n    return [code, Blockly.Python.ORDER_NONE];\n};\n\nBlockly.Blocks['text_ask'] = {\n    init: function() {\n        this.appendValueInput(\"TEXT\")\n            .setCheck(null)\n            .appendField(\"input\");\n        this.setOutput(true, \"String\");\n        this.setColour(160);\n        this.setTooltip(\"Ask for a specific input.\");\n        this.setHelpUrl(\"\");\n    }\n};\n\njavascript.javascriptGenerator.forBlock.text_to_number = function(block, generator) {\n    const prompt = (generator.valueToCode(\n        block,\n        'TEXT',\n        Blockly.JavaScript.ORDER_NONE\n    ) || \"''\").trim();\n    let code = \"text_to_number(\" + prompt + \")\";\n    return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\npython.pythonGenerator.forBlock.text_to_number = function(block, generator) {\n    const prompt = (generator.valueToCode(\n        block,\n        'TEXT',\n        Blockly.Python.ORDER_NONE\n    ) || \"''\").trim();\n    let code = \"text_to_number(\" + prompt + \")\";\n    return [code, Blockly.Python.ORDER_NONE];\n};\n\nBlockly.Blocks['text_to_number'] = {\n    init: function() {\n        this.appendValueInput(\"TEXT\")\n            .setCheck(null)\n            .appendField(\"text to number\");\n        this.setOutput(true, \"Number\");\n        this.setColour(\"#5b67a5\");\n        this.setTooltip(\"Convert a string to a number.\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Blocks.number_input = {\n    init: function() {\n        this.appendDummyInput()\n        .appendField(\"number input\")\n        .appendField(new Blockly.FieldNumber(0), \"number_input\");\n        this.setOutput(true, \"Number\");\n        this.setColour(180);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Blocks.text_input = {\n    init: function() {\n        this.appendDummyInput()\n            .appendField(\"text input:\")\n            .appendField(new Blockly.FieldTextInput('text'),\n                'text_input');\n        this.setOutput(true, \"String\");\n        this.setColour(180);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Blocks.text_multiline_input = {\n    init: function() {\n        this.appendDummyInput()\n            .appendField(\"multiline text input:\")\n            .appendField(new Blockly.FieldMultilineInput('multiline \\n text'),\n                'text_input');\n        this.setOutput(true, \"String\");\n        this.setColour(180);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Blocks.start = {\n    init: function() {\n        this.appendDummyInput()\n            .appendField(\"start\");\n        this.setNextStatement(true, null);\n        this.setColour(60);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n        this.setDeletable(false);\n    }\n};\n\n// eslint-disable-next-line no-unused-vars\njavascript.javascriptGenerator.forBlock.start = function(block, generator) {\n    // Get all blocks attached to this block\n    let code = '';\n    return code;\n};\n\n// eslint-disable-next-line no-unused-vars\njavascript.javascriptGenerator.forBlock.number_input = function(block, generator) {\n    const number = block.getFieldValue('number_input');\n    let code = 'input(' + number + ')';\n    return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\n// eslint-disable-next-line no-unused-vars\njavascript.javascriptGenerator.forBlock.text_input = function(block, generator) {\n    const text = block.getFieldValue('text_input');\n    let code = 'input(\"' + text + '\")';\n    return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\n// eslint-disable-next-line no-unused-vars\njavascript.javascriptGenerator.forBlock.text_multiline_input = function(block, generator) {\n    const text = block.getFieldValue('text_input');\n    let code = \"input(`\" + text + \"`)\";\n    return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\nclass CustomCategory extends Blockly.ToolboxCategory {\n    /**\n     * Constructor for a custom category.\n     * @override\n     */\n    constructor(categoryDef, toolbox, optParent) {\n        super(categoryDef, toolbox, optParent);\n    }\n\n    /** @override */\n    addColourBorder_(colour) {\n        this.rowDiv_.style.backgroundColor = colour;\n    }\n\n    /** @override */\n    setSelected(isSelected) {\n        // We do not store the label span on the category, so use getElementsByClassName.\n        var labelDom = this.rowDiv_.getElementsByClassName('blocklyTreeLabel')[0];\n        if (isSelected) {\n            // Change the background color of the div to white.\n            this.rowDiv_.style.backgroundColor = 'white';\n            // Set the colour of the text to the colour of the category.\n            labelDom.style.color = this.colour_;\n            this.iconDom_.style.color = this.colour_;\n        } else {\n            // Set the background back to the original colour.\n            this.rowDiv_.style.backgroundColor = this.colour_;\n            // Set the text back to white.\n            labelDom.style.color = 'white';\n            this.iconDom_.style.color = 'white';\n        }\n        // This is used for accessibility purposes.\n        Blockly.utils.aria.setState(/** @type {!Element} */ (this.htmlDiv_),\n            Blockly.utils.aria.State.SELECTED, isSelected);\n    }\n}\n\nclass ToolboxLabel extends Blockly.ToolboxItem {\n    constructor(toolboxItemDef, parentToolbox) {\n        super(toolboxItemDef, parentToolbox);\n    }\n\n    /** @override */\n    init() {\n        // Create the label.\n        this.label = document.createElement('label');\n\n        // Set the name.\n        this.label.textContent = this.toolboxItemDef_.name;\n        // Set the color.\n        this.label.style.color = this.toolboxItemDef_.colour;\n    }\n\n    /** @override */\n    getDiv() {\n        return this.label;\n    }\n}\n\nBlockly.registry.register(Blockly.registry.Type.TOOLBOX_ITEM, 'toolboxlabel', ToolboxLabel);\n\nBlockly.registry.register(Blockly.registry.Type.TOOLBOX_ITEM, Blockly.ToolboxCategory.registrationName, CustomCategory, true);\n\n// O problema é que, ao fazer save, estou a guardar o workspace do aluno na minha linha da base de dados, não na dele\n"],"names":["toolbox","nextblocksWorkspace","define","lib","repository","chat","runCode","code","outputDiv","document","getElementById","classList","remove","codeString","getCompleteCodeString","errorPrevention","output","silentRunCode","outputHTML","String","replace","includes","innerHTML","saveState","isTeacherReport","state","Blockly","serialization","workspaces","save","stateB64","btoa","JSON","stringify","cmid","getCMID","queryString","window","location","search","urlParams","URLSearchParams","userId","get","saveWorkspace","submitWorkspace","inputFuncDecs","getWorkspaceCode","getSubmittableCodeString","delay","ms","Promise","res","setTimeout","reload","displayTestResults","results","tests","testResultsDiv","add","testsAccordion","setupButtons","workspace","lastUserReaction","runButton","addEventListener","runTestsButton","runTests","then","saveButton","submitButton","lastUserReactionString","imgs","getElementsByClassName","Array","from","forEach","img","imageType","src","changeImageBackground","newReactionsPromise","submitReaction","newReactions","updatePercentages","reactionseasy","reactionsmedium","reactionshard","textCodeButton","codeVisible","overlayDiv","blocklyArea","paddingLeft","parseInt","getComputedStyle","getPropertyValue","paddingRight","style","display","createElement","position","top","left","width","height","backgroundColor","border","padding","fontFamily","zIndex","appendChild","headerDiv","id","jsButton","textContent","marginRight","pyButton","codeContentDiv","marginTop","updateOverlayCode","querySelectorAll","input","lang","formatPythonCodeHTML","getWorkspaceCodePython","formatCodeHTML","init","contents","loadedSave","customBlocks","remainingSubmissions","reactions","reportType","arguments","length","undefined","userName","activityId","populate","getMessages","blocklyDiv","push","block","splitTest","generator","split","dotCase","Error","blockName","trim","definition","parse","defineBlocksWithJsonArray","eval","pythongenerator","inject","getOptions","javascript","javascriptGenerator","python","pythonGenerator","resizeObserver","ResizeObserver","onResize","observe","inputFunctionDeclarations","funcDecs","loadSave","addBlockToWorkspace","lockWorkspaceBlocks","run","saveMessage","getTopBlocks","lockBlock","lockChildren","getChildren","child","inputList","fieldRow","field","setEnabled","setMovable","setDeletable","otherImg","contains","easy","medium","hard","inc","elements","values","percentages","calcPercentages","total","map","val","Math","round","readOnly","collapse","comments","disable","maxBlocks","Infinity","trashcan","horizontalLayout","toolboxPosition","css","media","rtl","scrollbars","sounds","oneBasedIndex","grid","spacing","colour","snap","zoom","controls","wheel","startScale","maxScale","minScale","scaleSpeed","element","x","y","offsetLeft","offsetTop","offsetParent","offsetWidth","offsetHeight","svgResize","newBlock","initSvg","render","atob","load","body","cmidClass","find","className","startsWith","prototype","hideWrapperFunction","lines","splice","join","forBlock","text_print","valueToCode","JavaScript","ORDER_NONE","text_ask","question","Python","Blocks","appendValueInput","setCheck","appendField","setOutput","setColour","setTooltip","setHelpUrl","text_to_number","prompt","number_input","appendDummyInput","FieldNumber","text_input","FieldTextInput","text_multiline_input","FieldMultilineInput","start","setNextStatement","number","getFieldValue","text","CustomCategory","ToolboxCategory","constructor","categoryDef","optParent","addColourBorder_","rowDiv_","setSelected","isSelected","labelDom","color","colour_","iconDom_","utils","aria","setState","htmlDiv_","State","SELECTED","ToolboxLabel","ToolboxItem","toolboxItemDef","parentToolbox","label","toolboxItemDef_","name","getDiv","registry","register","Type","TOOLBOX_ITEM","registrationName"],"mappings":"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"}