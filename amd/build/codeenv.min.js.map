{"version":3,"file":"codeenv.min.js","sources":["../src/codeenv.js"],"sourcesContent":["/**\n *\n * @module      mod_nextblocks/codeenv\n * @copyright   2023 Duarte Pereira<dg.pereira@campus.fct.unl.pt>\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/* globals Blockly */\n\n/* globals javascript */\n\nlet toolbox = {\n    'kind': 'categoryToolbox',\n    'readOnly': true,\n    'contents': [\n        {\n            'kind': 'toolboxlabel',\n            'name': 'NextBlocks',\n            'colour': 'darkslategrey'\n        },\n        {\n            'kind': 'category',\n            'name': 'Logic',\n            'colour': '5b80a5',\n            \"cssConfig\": {\n                'icon': 'customIcon fa fa-cog',\n            },\n            'contents': [\n                {\n                    'kind': 'block',\n                    'type': 'controls_if',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'logic_compare',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'logic_negate',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'logic_operation',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'logic_boolean',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'logic_null',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'logic_ternary',\n                }\n            ],\n        },\n        {\n            'kind': 'category',\n            'name': 'Loops',\n            'colour': '5ba580',\n            \"cssConfig\": {\n                'icon': 'customIcon fa-solid fa-sync',\n            },\n            'contents': [\n                {\n                    'kind': 'block',\n                    'type': 'controls_repeat_ext',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'controls_whileUntil',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'controls_for',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'controls_forEach',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'controls_repeat',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'controls_flow_statements',\n                }\n            ],\n        },\n        {\n            'kind': 'category',\n            'name': 'Math',\n            'colour': '5b67a5',\n            \"cssConfig\": {\n                'icon': 'customIcon fa-solid fa-plus-minus',\n            },\n            'contents': [\n                {\n                    'kind': 'block',\n                    'type': 'math_number',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_arithmetic',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_single',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_trig',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_constant',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_number_property',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_round',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_on_list',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_modulo',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_constrain',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_random_int',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_random_float',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'math_atan2',\n                },\n            ],\n        },\n        {\n            'kind': 'category',\n            'name': 'Text',\n            'colour': '5ba58c',\n            \"cssConfig\": {\n                'icon': 'customIcon fa-solid fa-font',\n            },\n            'contents': [\n                {\n                    'kind': 'block',\n                    'type': 'text',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_multiline',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_join',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_append',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_length',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_isEmpty',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_indexOf',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_charAt',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_getSubstring',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_changeCase',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_trim',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_count',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_replace',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_reverse',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_print',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_ask',\n                },\n            ],\n        },\n        {\n            'kind': 'category',\n            'name': 'Lists',\n            'colour': '5b80a5',\n            \"cssConfig\": {\n                'icon': 'customIcon fa-solid fa-list',\n            },\n            'contents': [\n                {\n                    'kind': 'block',\n                    'type': 'lists_create_with',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'lists_repeat',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'lists_length',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'lists_isEmpty',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'lists_indexOf',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'lists_getIndex',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'lists_setIndex',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'lists_getSublist',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'lists_split',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'lists_sort',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'lists_reverse',\n                }\n            ],\n        },\n        {\n            'kind': 'category',\n            'name': 'Variables',\n            'colour': 'a55b80',\n            \"cssConfig\": {\n                'icon': 'customIcon fa-solid fa-clipboard-list',\n            },\n            'custom': 'VARIABLE',\n        },\n        {\n            'kind': 'category',\n            'name': 'Functions',\n            'colour': '995ba5',\n            \"cssConfig\": {\n                'icon': 'customIcon fa-solid fa-code',\n            },\n            'custom': 'PROCEDURE',\n        },\n        {\n            'kind': 'category',\n            'name': 'Input',\n            'colour': '180',\n            \"cssConfig\": {\n                'icon': 'customIcon fa-solid fa-keyboard',\n            },\n            'contents': [\n                {\n                    'kind': 'block',\n                    'type': 'number_input',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_input',\n                },\n                {\n                    'kind': 'block',\n                    'type': 'text_multiline_input',\n                },\n            ],\n        },\n    ],\n};\n\n// GetMainWorkspace might remove need for global variable\nlet nextblocksWorkspace;\n\ndefine(['mod_nextblocks/lib', 'mod_nextblocks/repository', 'mod_nextblocks/chat'], function(lib, repository, chat) {\n    /**\n     * @param {CodeString} code The Javascript code to be run\n     * Runs the code and displays the output in the output div\n     */\n    async function runCode(code) {\n        const output = await lib.silentRunCode(code.getCompleteCodeString());\n        // Replace newlines with <br /> so that they are displayed correctly\n        const outputHTML = String(output).replace(/\\n/g, \"<br />\");\n        const outputDiv = document.getElementById('output-div');\n        // Wrap the output in a div with max-height and overflow-y: auto to make it scrollable if too long (multiline input)\n        outputDiv.innerHTML = `<div style=\"max-height: 100%; overflow-y: auto;\"><pre>${outputHTML}</pre></div>`;\n    }\n\n    /**\n     * Saves the current state of the workspace to the database, for later retrieval and display\n     * By default, the workspace is saved to the currently logged-in user's entry in the database\n     * If a teacher is adding a comment to a student's submission, the student's id is passed as an argument,\n     * because in that case the workspace should be saved to the student's entry in the database, not to the teacher's.\n     * @param {bool} isTeacherReport whether the current page is a teacher report. If so, we need to pass the student's id,\n     * because PHP will not be able to get it from the user api, as the logged-in user will be the teacher\n     */\n    const saveState = (isTeacherReport) => {\n        const state = Blockly.serialization.workspaces.save(nextblocksWorkspace);\n        const stateB64 = btoa(JSON.stringify(state));\n        const cmid = getCMID();\n\n        if (isTeacherReport) {\n            const queryString = window.location.search;\n            const urlParams = new URLSearchParams(queryString);\n            const userId = urlParams.get('userid');\n\n            repository.saveWorkspace(cmid, stateB64, userId);\n        } else {\n            repository.saveWorkspace(cmid, stateB64);\n        }\n    };\n\n    const submitWorkspace = async(inputFuncDecs) => {\n        const codeString = lib.getWorkspaceCode(nextblocksWorkspace, inputFuncDecs).getSubmittableCodeString();\n        const state = Blockly.serialization.workspaces.save(nextblocksWorkspace);\n        const stateB64 = btoa(JSON.stringify(state));\n        const cmid = getCMID();\n        repository.submitWorkspace(cmid, stateB64, codeString);\n\n        const delay = ms => new Promise(res => setTimeout(res, ms));\n        await delay(1000);\n\n        location.reload();\n    };\n\n    /**\n     * @param {any[]} results The results of the tests\n     * @param {{}} tests The tests that were run\n     * @param {String[]} uncalledInputFuncs The names of the input functions that were not called in the code, if any\n     * Displays the results of the tests in the output div\n     */\n    function displayTestResults(results, tests, uncalledInputFuncs) {\n        const testResultsDiv = document.getElementById('output-div');\n        testResultsDiv.innerHTML = lib.testsAccordion(results, tests, uncalledInputFuncs);\n    }\n\n    /**\n     * @param {{}} tests The tests to be run\n     * @param {WorkspaceSvg} workspace The workspace to get the code from\n     * @param {string} inputFuncDecs\n     * @param {number} lastUserReaction The type of reaction the current user last submitted\n     * @param {boolean} isTeacherReport Whether the report to be displayed is a teacher report\n     */\n    function setupButtons(tests, workspace, inputFuncDecs, lastUserReaction, isTeacherReport) {\n        // Listen for clicks on the run button\n        const runButton = document.getElementById('runButton');\n        runButton.addEventListener('click', function() {\n            const code = lib.getWorkspaceCode(workspace, inputFuncDecs);\n            // Lib.replaceCode(code);\n            runCode(code);\n        });\n\n        if (tests !== null) {\n            // Listen for clicks on the run tests button\n            const runTestsButton = document.getElementById('runTestsButton');\n            runTestsButton.addEventListener('click', () => { // Needs anonymous function wrap to pass argument\n                const code = lib.getWorkspaceCode(workspace, inputFuncDecs).getCompleteCodeString();\n                const uncalledInputFuncs = lib.getMissingInputCalls(code, inputFuncDecs);\n                let results;\n                // If not all input functions are called, automatically fails all tests\n                if (uncalledInputFuncs.length > 0) {\n                    results = null;\n                } else {\n                    results = lib.runTests(code, tests);\n                }\n                displayTestResults(results, tests, uncalledInputFuncs);\n            });\n        }\n\n        // Listen for clicks on the save button\n        const saveButton = document.getElementById('saveButton');\n        saveButton.addEventListener('click', () => {\n            saveState(isTeacherReport);\n        });\n\n        // Listen for clicks on the submit button, if it exists (doesn't exist in report pages)\n        const submitButton = document.getElementById('submitButton');\n        if (submitButton !== null) {\n            submitButton.addEventListener('click', () => {\n                submitWorkspace(inputFuncDecs);\n            });\n        }\n\n        // Convert the lastUserReaction to a string\n        let lastUserReactionString = \"\";\n        if (lastUserReaction === 1) {\n            lastUserReactionString = \"easy\";\n        } else if (lastUserReaction === 2) {\n            lastUserReactionString = \"medium\";\n        } else if (lastUserReaction === 3) {\n            lastUserReactionString = \"hard\";\n        }\n\n        const imgs = document.getElementsByClassName(\"emoji-img\");\n        Array.from(imgs).forEach((img) => {\n            let imageType = '';\n            if (img.src.includes(\"easy\")) {\n                imageType = \"easy\";\n            } else if (img.src.includes(\"think\")) {\n                imageType = \"medium\";\n            } else if (img.src.includes(\"hard\")) {\n                imageType = \"hard\";\n            }\n\n            // Start with one image selected if the user has already reacted in a previous session\n            if (lastUserReactionString === imageType) {\n                changeImageBackground(img);\n            }\n\n            // Only listen for clicks on the images if page is not a teacher report\n            if (!isTeacherReport) {\n                img.addEventListener(\"click\", () => {\n                    // Submit reaction, and wait for response with new reaction counts\n                    const newReactionsPromise = repository.submitReaction(getCMID(), imageType);\n                    newReactionsPromise.then((newReactions) => {\n                        updatePercentages(newReactions.reactionseasy, newReactions.reactionsmedium, newReactions.reactionshard);\n                        changeImageBackground(img);\n                    });\n                });\n            }\n        });\n\n        const textCodeButton = document.getElementById('showCodeButton');\n        let codeVisible = false; // Variable to track the visibility state\n        let overlayDiv;\n\n        textCodeButton.addEventListener('click', () => {\n            const blocklyArea = document.getElementById('blocklyArea');\n            const codeString = lib.formatCodeHTML(lib.getWorkspaceCode(workspace, inputFuncDecs)).replace(/\\n/g, \"<br />\");\n\n            // Get the padding of the blocklyArea\n            const paddingLeft = parseInt(window.getComputedStyle(blocklyArea).getPropertyValue('padding-left'));\n            const paddingRight = parseInt(window.getComputedStyle(blocklyArea).getPropertyValue('padding-right'));\n\n            if (codeVisible) {\n                // If the code is currently visible, hide it\n                overlayDiv.style.display = 'none';\n                codeVisible = false;\n            } else {\n                // If the code is currently hidden, show it\n                if (!overlayDiv) {\n                    // If the overlay div doesn't exist, create it\n                    overlayDiv = document.createElement('div');\n                    overlayDiv.style.position = 'absolute';\n                    overlayDiv.style.top = '0';\n                    overlayDiv.style.left = `${paddingLeft}px`;\n                    overlayDiv.style.width = `calc(100% - ${paddingLeft + paddingRight}px)`;\n                    overlayDiv.style.height = '100%';\n                    overlayDiv.style.backgroundColor = '#f9f9f9';\n                    overlayDiv.style.border = '1px solid #ddd';\n                    overlayDiv.style.padding = '10px';\n                    overlayDiv.style.fontFamily = '\"Lucida Console\", \"Courier New\", monospace';\n                    overlayDiv.style.zIndex = '1000';\n                    blocklyArea.appendChild(overlayDiv);\n                }\n                overlayDiv.innerHTML = codeString;\n                overlayDiv.style.display = 'block';\n                codeVisible = true;\n            }\n        });\n    }\n\n    return {\n        /**\n         * @param {string} contents The contents of the tests file.\n         * @param {string} loadedSave The contents of the loaded save, in a base64-encoded JSON string.\n         * @param {{}} customBlocks The custom blocks to be added to the toolbox, created by the exercise creator.\n         * @param {number} remainingSubmissions The number of remaining submissions for the current user.\n         * @param {string[]} reactions An array of 3 strings, each containing the number of reactions of a certain type\n         * (easy, medium, hard).\n         * @param {number} lastUserReaction The type of reaction the current user last submitted\n         * (0 = no reaction, 1 = easy, 2 = medium, 3 = hard).\n         * @param {number} reportType Indicates the type of report to be displayed (0 = no report, 1 = teacher report,\n         * 2 = student report).\n         * @param {string} userName The name of the user that loaded the page.\n         * @param {number} activityId The id of the activity\n         */\n        init: function(contents, loadedSave, customBlocks, remainingSubmissions, reactions, lastUserReaction, reportType = 0,\n                       userName, activityId) {\n            // If report is student but he can still submit, change to no report so he can use the workspace\n            if (reportType === 2 && remainingSubmissions > 0) {\n                reportType = 0;\n            }\n            updatePercentages(reactions[0], reactions[1], reactions[2]);\n\n            chat.populate(repository.getMessages, activityId);\n\n            const blocklyDiv = document.getElementById('blocklyDiv');\n            const blocklyArea = document.getElementById('blocklyArea');\n\n            // If there are custom blocks, add a new category to the toolbox\n            if (customBlocks.length > 0) {\n                toolbox.contents.push({\n                    'kind': 'category',\n                    'name': 'Custom Blocks',\n                    'colour': 'a55b80',\n                    \"cssConfig\": {\n                        'icon': 'customIcon fa-solid fa-code',\n                    },\n                    'contents': [],\n                });\n            }\n\n            customBlocks.forEach((block) => {\n                let splitTest = block.generator.split(\"forBlock['\");\n                let dotCase = false;\n                if (splitTest.length < 2) {\n                    splitTest = block.generator.split(\"forBlock.\");\n                    if (splitTest.length < 2) {\n                        throw new Error(\"Invalid generator\");\n                    }\n                    dotCase = true;\n                }\n                const blockName = splitTest[1].split(dotCase ? \" = \" : \"']\")[0].trim();\n                // Add block to toolbox\n                toolbox.contents[toolbox.contents.length - 1].contents.push({\n                    'kind': 'block',\n                    'type': blockName,\n                });\n\n                // eslint-disable-next-line no-eval\n                eval(block.definition);\n                // eslint-disable-next-line no-eval\n                eval(block.generator);\n            });\n\n            nextblocksWorkspace = Blockly.inject(blocklyDiv, getOptions(remainingSubmissions, reportType !== 0));\n            javascript.javascriptGenerator.init(nextblocksWorkspace);\n\n            // Use resize observer instead of window resize event. This captures both window resize and element resize\n            const resizeObserver = new ResizeObserver(() => onResize(blocklyArea, blocklyDiv, nextblocksWorkspace));\n            resizeObserver.observe(blocklyArea);\n\n            // Parse json from test file contents\n            const tests = JSON.parse(contents);\n            let inputFunctionDeclarations = {funcDecs: \"\"};\n            if (tests !== null) {\n                // Create forced input blocks from tests file. Only add to workspace if there is no workspace to load. If there\n                // was a workspace to load, they would be added twice.\n                const inputs = tests[0].inputs;\n\n                inputs.forEach((input, i) => {\n                    const inputName = Object.keys(input)[0];\n                    const inputType = Object.keys(input[inputName])[0];\n                    createForcedInputBlock(inputName, inputType, inputFunctionDeclarations); // Doesn't add block to workspace, just\n                    // defines it. Needed for save loading\n\n                    if (loadedSave === null) { // Only add to workspace if there is no workspace to load\n                        const blockName = \"forced_input_\" + inputName;\n                        let newBlock = addBlockToWorkspace(blockName, nextblocksWorkspace);\n                        newBlock.moveBy(0, i * 50 + 50); // Move block down a bit so that they don't overlap\n                    }\n                });\n            }\n\n            // Load the save, if there is one\n            if (loadedSave !== null) {\n                loadSave(loadedSave, nextblocksWorkspace);\n            } else { // Otherwise, add the start block\n                addBlockToWorkspace('start', nextblocksWorkspace);\n            }\n\n            // If page is a report page, lock all workspace blocks while still allowing comments\n            if (reportType !== 0) {\n                lockWorkspaceBlocks(nextblocksWorkspace);\n            }\n\n            setupButtons(tests, nextblocksWorkspace, inputFunctionDeclarations.funcDecs, lastUserReaction, reportType === 1);\n\n            chat.run(userName, activityId, repository.saveMessage);\n        },\n    };\n});\n\n/**\n * Locks all blocks in a workspace, preventing them from being moved or deleted\n * @param {WorkspaceSvg} workspace The workspace to lock\n */\nconst lockWorkspaceBlocks = function(workspace) {\n    workspace.getTopBlocks(false).forEach((block) => {\n        lockBlock(block);\n        lockChildren(block);\n    });\n\n    /**\n     * Recursively locks a block and all its children, preventing them from being moved or deleted\n     * @param {BlockSvg} block The block that will be locked and have its children locked\n     */\n    function lockChildren(block) {\n        block.getChildren(false).forEach((child) => {\n            lockBlock(child);\n\n            // Have to mess with internal Blockly stuff to block only the inputs while still allowing comments\n            child.inputList.forEach((input) => {\n                input.fieldRow.forEach((field) => {\n                    field.setEnabled(false);\n                });\n            });\n\n            lockChildren(child);\n        });\n    }\n\n    /**\n     * Locks a block, preventing it from being moved or deleted\n     * @param {BlockSvg} block The block that will be locked\n     */\n    function lockBlock(block) {\n        block.setMovable(false);\n        block.setDeletable(false);\n    }\n};\n\n// Makes background of image blue if it is not blue, and vice versa\nconst changeImageBackground = function(img) {\n    // Change background of all other images to secondary\n    const imgs = document.getElementsByClassName(\"emoji-img\");\n    Array.from(imgs).forEach((otherImg) => {\n        if (otherImg !== img) {\n            otherImg.classList.remove(\"bg-primary\");\n            otherImg.classList.add(\"bg-secondary\");\n        }\n    });\n\n    // Toggle background of clicked image\n    if (img.classList.contains(\"bg-primary\")) {\n        img.classList.remove(\"bg-primary\");\n        img.classList.add(\"bg-secondary\");\n    } else {\n        img.classList.remove(\"bg-secondary\");\n        img.classList.add(\"bg-primary\");\n    }\n};\n\n/**\n * Updates the percentages of difficulty levels (easy, medium, hard) on the page.\n *\n * @param {number} easy - The count of 'easy' reactions.\n * @param {number} medium - The count of 'medium' reactions.\n * @param {number} hard - The count of 'hard' reactions.\n * @param {string} [inc=\"\"] - The difficulty level to increment. If not provided, no level is incremented.\n * Unused right now, just for future-proofing\n */\nconst updatePercentages = function(easy, medium, hard, inc = \"\") {\n    // Mapping of difficulty levels to their corresponding HTML elements\n    const elements = {\n        \"easy\": document.getElementById('percentage-easy'),\n        \"medium\": document.getElementById('percentage-medium'),\n        \"hard\": document.getElementById('percentage-hard')\n    };\n\n    // Mapping of difficulty levels to their counts\n    const values = {\n        \"easy\": easy,\n        \"medium\": medium,\n        \"hard\": hard\n    };\n\n    // If a difficulty level to increment is provided, increment its count\n    if (inc in values) {\n        values[inc]++;\n    }\n\n    // Calculate the percentages for each difficulty level\n    let percentages = calcPercentages(values.easy, values.medium, values.hard);\n\n    // Update the HTML elements with the new percentages\n    elements.easy.innerHTML = percentages[0] + '%';\n    elements.medium.innerHTML = percentages[1] + '%';\n    elements.hard.innerHTML = percentages[2] + '%';\n};\n\nconst calcPercentages = (easy, medium, hard) => {\n    const total = easy + medium + hard;\n    return total === 0 ? [0, 0, 0] : [easy, medium, hard].map(val => Math.round((val / total) * 100));\n};\n\nconst getOptions = function(remainingSubmissions, readOnly) {\n    return {\n        toolbox: readOnly ? null : toolbox,\n        collapse: true,\n        comments: true,\n        disable: false,\n        maxBlocks: Infinity,\n        trashcan: !readOnly,\n        horizontalLayout: false,\n        toolboxPosition: 'start',\n        css: true,\n        media: 'https://blockly-demo.appspot.com/static/media/',\n        rtl: false,\n        scrollbars: true,\n        sounds: true,\n        oneBasedIndex: false,\n        readOnly: remainingSubmissions <= 0,\n        grid: {\n            spacing: 20,\n            length: 1,\n            colour: '#888',\n            snap: false,\n        },\n        zoom: {\n            controls: true,\n            wheel: true,\n            startScale: 1,\n            maxScale: 3,\n            minScale: 0.3,\n            scaleSpeed: 1.2,\n        },\n    };\n};\n\nconst onResize = function(blocklyArea, blocklyDiv, nextblocksWorkspace) {\n    // Compute the absolute coordinates and dimensions of blocklyArea.\n    let element = blocklyArea;\n    let x = 0;\n    let y = 0;\n    do {\n        x += element.offsetLeft;\n        y += element.offsetTop;\n        element = element.offsetParent;\n    } while (element);\n    // Position blocklyDiv over blocklyArea.\n    blocklyDiv.style.left = x + 'px';\n    blocklyDiv.style.top = y + 'px';\n    blocklyDiv.style.width = blocklyArea.offsetWidth + 'px';\n    blocklyDiv.style.height = blocklyArea.offsetHeight + 'px';\n    Blockly.svgResize(nextblocksWorkspace);\n};\n\n/**\n * @param {String} blockName The name of the input block to be added (prompt on the left side of the block\n * @param {WorkspaceSvg} workspace The workspace to add the input block to\n * @returns {BlockSvg} The newly created block\n */\nfunction addBlockToWorkspace(blockName, workspace) {\n    const newBlock = workspace.newBlock(blockName);\n    newBlock.initSvg();\n    newBlock.render();\n    return newBlock;\n}\n\n/**\n * @param {String} loadedSave\n * @param {WorkspaceSvg} workspace\n */\nfunction loadSave(loadedSave, workspace) {\n    const state = JSON.parse(atob(loadedSave));\n    Blockly.serialization.workspaces.load(state, workspace);\n}\n\n/**\n * @returns {Number} The course module id of the current page\n */\nfunction getCMID() {\n    const classList = document.body.classList;\n    const cmidClass = Array.from(classList).find((className) => className.startsWith('cmid-'));\n    return parseInt(cmidClass.split('-')[1]);\n}\n\n/**\n * @param {string} prompt The name of the input block to be added (prompt on the left side of the block)\n * @param {string} inputType The type of the input block to be added (string, number, etc.)\n * @param {object} inputFunctionDeclarations Contains the string containing the function declarations for the input\n * blocks, to be added to the top of the code. Is an object so that it is passed by reference.\n */\nfunction createForcedInputBlock(prompt, inputType, inputFunctionDeclarations) {\n    const blockName = \"forced_input_\" + prompt;\n    if (inputType === \"string\") {\n        Blockly.Blocks[blockName] = {\n            init: function() {\n                this.appendDummyInput().appendField(prompt).appendField(new Blockly.FieldTextInput('text'), prompt);\n                this.setOutput(true, \"String\");\n                this.setDeletable(false);\n                this.setColour(180);\n                this.setTooltip(\"\");\n                this.setHelpUrl(\"\");\n            }\n        };\n\n        // eslint-disable-next-line no-unused-vars\n        javascript.javascriptGenerator.forBlock[blockName] = function(block, generator) {\n            const text = block.getFieldValue(prompt);\n            let blockCode = `input${prompt}('${text}')`;\n            return [blockCode, Blockly.JavaScript.ORDER_NONE];\n        };\n    } else if (inputType === \"number\") {\n        Blockly.Blocks[blockName] = {\n            init: function() {\n                this.appendDummyInput().appendField(prompt).appendField(new Blockly.FieldNumber(0), prompt);\n                this.setOutput(true, \"Number\");\n                this.setColour(180);\n                this.setTooltip(\"\");\n                this.setHelpUrl(\"\");\n            }\n        };\n\n        // eslint-disable-next-line no-unused-vars\n        javascript.javascriptGenerator.forBlock[blockName] = function(block, generator) {\n            const number = block.getFieldValue(prompt);\n            let blockCode = `input${prompt}(${number})`;\n            return [blockCode, Blockly.JavaScript.ORDER_NONE];\n        };\n    }\n\n    inputFunctionDeclarations.funcDecs += `function input${prompt}(string) {\\n   return string;\\n}\\n`;\n    javascript.javascriptGenerator.addReservedWords(`input${prompt}`);\n}\n\n// eslint-disable-next-line no-extend-native\nString.prototype.hideWrapperFunction = function() {\n    const lines = this.split('\\n');\n    lines.splice(0, 2); // Remove the first two lines\n    return lines.join('\\n');\n};\n\njavascript.javascriptGenerator.forBlock.text_print = function(block, generator) {\n    return (\n        \"customPrintln(\" +\n        (generator.valueToCode(\n            block,\n            \"TEXT\",\n            Blockly.JavaScript.ORDER_NONE\n        ) || \"''\") +\n        \");\\n\"\n    );\n};\n\njavascript.javascriptGenerator.forBlock.text_ask = function(block, generator) {\n    const question = (generator.valueToCode(\n        block,\n        'TEXT',\n        Blockly.JavaScript.ORDER_NONE\n    ) || \"''\");\n    let code = \"await input(\" + question + \")\";\n    return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\nBlockly.Blocks['text_ask'] = {\n    init: function() {\n        this.appendValueInput(\"TEXT\")\n            .setCheck(null)\n            .appendField(\"ask\");\n        this.setOutput(true, \"String\");\n        this.setColour(160);\n        this.setTooltip(\"Ask for a specific input.\");\n        this.setHelpUrl(\"\");\n    }\n};\n\n\n\nBlockly.Blocks.number_input = {\n    init: function() {\n        this.appendDummyInput()\n        .appendField(\"number input\")\n        .appendField(new Blockly.FieldNumber(0), \"number_input\");\n        this.setOutput(true, \"Number\");\n        this.setColour(180);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Blocks.text_input = {\n    init: function() {\n        this.appendDummyInput()\n            .appendField(\"text input:\")\n            .appendField(new Blockly.FieldTextInput('text'),\n                'text_input');\n        this.setOutput(true, \"String\");\n        this.setColour(180);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Blocks.text_multiline_input = {\n    init: function() {\n        this.appendDummyInput()\n            .appendField(\"multiline text input:\")\n            .appendField(new Blockly.FieldMultilineInput('multiline \\n text'),\n                'text_input');\n        this.setOutput(true, \"String\");\n        this.setColour(180);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.Blocks.start = {\n    init: function() {\n        this.appendDummyInput()\n            .appendField(\"start\");\n        this.setNextStatement(true, null);\n        this.setColour(60);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n        this.setDeletable(false);\n    }\n};\n\n// eslint-disable-next-line no-unused-vars\njavascript.javascriptGenerator.forBlock.start = function(block, generator) {\n    // Get all blocks attached to this block\n    let code = '';\n    return code;\n};\n\n// eslint-disable-next-line no-unused-vars\njavascript.javascriptGenerator.forBlock.number_input = function(block, generator) {\n    const number = block.getFieldValue('number_input');\n    let code = 'input(' + number + ')';\n    return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\n// eslint-disable-next-line no-unused-vars\njavascript.javascriptGenerator.forBlock.text_input = function(block, generator) {\n    const text = block.getFieldValue('text_input');\n    let code = 'input(\"' + text + '\")';\n    return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\n// eslint-disable-next-line no-unused-vars\njavascript.javascriptGenerator.forBlock.text_multiline_input = function(block, generator) {\n    const text = block.getFieldValue('text_input');\n    let code = \"input(`\" + text + \"`)\";\n    return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\nclass CustomCategory extends Blockly.ToolboxCategory {\n    /**\n     * Constructor for a custom category.\n     * @override\n     */\n    constructor(categoryDef, toolbox, optParent) {\n        super(categoryDef, toolbox, optParent);\n    }\n\n    /** @override */\n    addColourBorder_(colour) {\n        this.rowDiv_.style.backgroundColor = colour;\n    }\n\n    /** @override */\n    setSelected(isSelected) {\n        // We do not store the label span on the category, so use getElementsByClassName.\n        var labelDom = this.rowDiv_.getElementsByClassName('blocklyTreeLabel')[0];\n        if (isSelected) {\n            // Change the background color of the div to white.\n            this.rowDiv_.style.backgroundColor = 'white';\n            // Set the colour of the text to the colour of the category.\n            labelDom.style.color = this.colour_;\n            this.iconDom_.style.color = this.colour_;\n        } else {\n            // Set the background back to the original colour.\n            this.rowDiv_.style.backgroundColor = this.colour_;\n            // Set the text back to white.\n            labelDom.style.color = 'white';\n            this.iconDom_.style.color = 'white';\n        }\n        // This is used for accessibility purposes.\n        Blockly.utils.aria.setState(/** @type {!Element} */ (this.htmlDiv_),\n            Blockly.utils.aria.State.SELECTED, isSelected);\n    }\n}\n\nclass ToolboxLabel extends Blockly.ToolboxItem {\n    constructor(toolboxItemDef, parentToolbox) {\n        super(toolboxItemDef, parentToolbox);\n    }\n\n    /** @override */\n    init() {\n        // Create the label.\n        this.label = document.createElement('label');\n\n        // Set the name.\n        this.label.textContent = this.toolboxItemDef_.name;\n        // Set the color.\n        this.label.style.color = this.toolboxItemDef_.colour;\n    }\n\n    /** @override */\n    getDiv() {\n        return this.label;\n    }\n}\n\nBlockly.registry.register(Blockly.registry.Type.TOOLBOX_ITEM, 'toolboxlabel', ToolboxLabel);\n\nBlockly.registry.register(Blockly.registry.Type.TOOLBOX_ITEM, Blockly.ToolboxCategory.registrationName, CustomCategory, true);\n\n// O problema é que, ao fazer save, estou a guardar o workspace do aluno na minha linha da base de dados, não na dele\n"],"names":["toolbox","nextblocksWorkspace","define","lib","repository","chat","runCode","code","output","silentRunCode","getCompleteCodeString","outputHTML","String","replace","outputDiv","document","getElementById","innerHTML","saveState","isTeacherReport","state","Blockly","serialization","workspaces","save","stateB64","btoa","JSON","stringify","cmid","getCMID","queryString","window","location","search","urlParams","URLSearchParams","userId","get","saveWorkspace","submitWorkspace","inputFuncDecs","codeString","getWorkspaceCode","getSubmittableCodeString","delay","ms","Promise","res","setTimeout","reload","displayTestResults","results","tests","uncalledInputFuncs","testResultsDiv","testsAccordion","setupButtons","workspace","lastUserReaction","runButton","addEventListener","runTestsButton","getMissingInputCalls","length","runTests","saveButton","submitButton","lastUserReactionString","imgs","getElementsByClassName","Array","from","forEach","img","imageType","src","includes","changeImageBackground","newReactionsPromise","submitReaction","then","newReactions","updatePercentages","reactionseasy","reactionsmedium","reactionshard","textCodeButton","codeVisible","overlayDiv","blocklyArea","formatCodeHTML","paddingLeft","parseInt","getComputedStyle","getPropertyValue","paddingRight","style","display","createElement","position","top","left","width","height","backgroundColor","border","padding","fontFamily","zIndex","appendChild","init","contents","loadedSave","customBlocks","remainingSubmissions","reactions","reportType","arguments","undefined","userName","activityId","populate","getMessages","blocklyDiv","push","block","splitTest","generator","split","dotCase","Error","blockName","trim","eval","definition","inject","getOptions","javascript","javascriptGenerator","resizeObserver","ResizeObserver","onResize","observe","parse","inputFunctionDeclarations","funcDecs","inputs","input","i","inputName","Object","keys","inputType","createForcedInputBlock","newBlock","addBlockToWorkspace","moveBy","loadSave","lockWorkspaceBlocks","run","saveMessage","getTopBlocks","lockBlock","lockChildren","getChildren","child","inputList","fieldRow","field","setEnabled","setMovable","setDeletable","otherImg","classList","remove","add","contains","easy","medium","hard","inc","elements","values","percentages","calcPercentages","total","map","val","Math","round","readOnly","collapse","comments","disable","maxBlocks","Infinity","trashcan","horizontalLayout","toolboxPosition","css","media","rtl","scrollbars","sounds","oneBasedIndex","grid","spacing","colour","snap","zoom","controls","wheel","startScale","maxScale","minScale","scaleSpeed","element","x","y","offsetLeft","offsetTop","offsetParent","offsetWidth","offsetHeight","svgResize","initSvg","render","atob","load","body","cmidClass","find","className","startsWith","prompt","Blocks","appendDummyInput","appendField","FieldTextInput","setOutput","setColour","setTooltip","setHelpUrl","forBlock","text","getFieldValue","blockCode","JavaScript","ORDER_NONE","FieldNumber","number","addReservedWords","prototype","hideWrapperFunction","lines","splice","join","text_print","valueToCode","text_ask","question","appendValueInput","setCheck","number_input","text_input","text_multiline_input","FieldMultilineInput","start","setNextStatement","CustomCategory","ToolboxCategory","constructor","categoryDef","optParent","addColourBorder_","rowDiv_","setSelected","isSelected","labelDom","color","colour_","iconDom_","utils","aria","setState","htmlDiv_","State","SELECTED","ToolboxLabel","ToolboxItem","toolboxItemDef","parentToolbox","label","textContent","toolboxItemDef_","name","getDiv","registry","register","Type","TOOLBOX_ITEM","registrationName"],"mappings":"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"}